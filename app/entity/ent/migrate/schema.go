// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AuditLogsColumns holds the columns for the "audit_logs" table.
	AuditLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "module", Type: field.TypeString},
		{Name: "action_type", Type: field.TypeString},
		{Name: "details", Type: field.TypeString, Nullable: true, SchemaType: map[string]string{"mysql": "LONGTEXT", "postgres": "TEXT", "sqlite3": "TEXT"}},
		{Name: "ip_address", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "product_id", Type: field.TypeInt, Nullable: true},
		{Name: "operator_id", Type: field.TypeInt},
	}
	// AuditLogsTable holds the schema information for the "audit_logs" table.
	AuditLogsTable = &schema.Table{
		Name:       "audit_logs",
		Columns:    AuditLogsColumns,
		PrimaryKey: []*schema.Column{AuditLogsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "audit_logs_products_audit_logs",
				Columns:    []*schema.Column{AuditLogsColumns[6]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "audit_logs_users_audit_logs",
				Columns:    []*schema.Column{AuditLogsColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// DevicesColumns holds the columns for the "devices" table.
	DevicesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "sn", Type: field.TypeString, Unique: true},
		{Name: "oem_tag", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "remark", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt, Nullable: true},
		{Name: "updated_by", Type: field.TypeInt, Nullable: true},
		{Name: "license_type_id", Type: field.TypeInt, Nullable: true},
		{Name: "product_id", Type: field.TypeInt},
	}
	// DevicesTable holds the schema information for the "devices" table.
	DevicesTable = &schema.Table{
		Name:       "devices",
		Columns:    DevicesColumns,
		PrimaryKey: []*schema.Column{DevicesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "devices_users_creator",
				Columns:    []*schema.Column{DevicesColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "devices_users_updater",
				Columns:    []*schema.Column{DevicesColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "devices_license_types_devices",
				Columns:    []*schema.Column{DevicesColumns[8]},
				RefColumns: []*schema.Column{LicenseTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "devices_products_devices",
				Columns:    []*schema.Column{DevicesColumns[9]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "device_sn",
				Unique:  true,
				Columns: []*schema.Column{DevicesColumns[1]},
			},
			{
				Name:    "device_product_id",
				Unique:  false,
				Columns: []*schema.Column{DevicesColumns[9]},
			},
			{
				Name:    "device_license_type_id",
				Unique:  false,
				Columns: []*schema.Column{DevicesColumns[8]},
			},
		},
	}
	// FirmwareVersionsColumns holds the columns for the "firmware_versions" table.
	FirmwareVersionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "version", Type: field.TypeString},
		{Name: "release_date", Type: field.TypeTime},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_by", Type: field.TypeInt},
		{Name: "product_id", Type: field.TypeInt},
	}
	// FirmwareVersionsTable holds the schema information for the "firmware_versions" table.
	FirmwareVersionsTable = &schema.Table{
		Name:       "firmware_versions",
		Columns:    FirmwareVersionsColumns,
		PrimaryKey: []*schema.Column{FirmwareVersionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "firmware_versions_users_creator",
				Columns:    []*schema.Column{FirmwareVersionsColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "firmware_versions_products_firmware_versions",
				Columns:    []*schema.Column{FirmwareVersionsColumns[7]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "firmwareversion_product_id_version",
				Unique:  true,
				Columns: []*schema.Column{FirmwareVersionsColumns[7], FirmwareVersionsColumns[1]},
			},
		},
	}
	// LicenseTypesColumns holds the columns for the "license_types" table.
	LicenseTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "type_name", Type: field.TypeString},
		{Name: "license_type", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "product_id", Type: field.TypeInt},
	}
	// LicenseTypesTable holds the schema information for the "license_types" table.
	LicenseTypesTable = &schema.Table{
		Name:       "license_types",
		Columns:    LicenseTypesColumns,
		PrimaryKey: []*schema.Column{LicenseTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "license_types_products_license_types",
				Columns:    []*schema.Column{LicenseTypesColumns[5]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// LicenseTypeFeaturesColumns holds the columns for the "license_type_features" table.
	LicenseTypeFeaturesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "license_type_id", Type: field.TypeInt},
		{Name: "feature_id", Type: field.TypeInt},
	}
	// LicenseTypeFeaturesTable holds the schema information for the "license_type_features" table.
	LicenseTypeFeaturesTable = &schema.Table{
		Name:       "license_type_features",
		Columns:    LicenseTypeFeaturesColumns,
		PrimaryKey: []*schema.Column{LicenseTypeFeaturesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "license_type_features_license_types_license_type",
				Columns:    []*schema.Column{LicenseTypeFeaturesColumns[2]},
				RefColumns: []*schema.Column{LicenseTypesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "license_type_features_product_features_feature",
				Columns:    []*schema.Column{LicenseTypeFeaturesColumns[3]},
				RefColumns: []*schema.Column{ProductFeaturesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "licensetypefeatures_license_type_id_feature_id",
				Unique:  true,
				Columns: []*schema.Column{LicenseTypeFeaturesColumns[2], LicenseTypeFeaturesColumns[3]},
			},
		},
	}
	// ProductsColumns holds the columns for the "products" table.
	ProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "code", Type: field.TypeString, Unique: true},
		{Name: "product_type", Type: field.TypeString, Nullable: true, Default: "default"},
		{Name: "product_name", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// ProductsTable holds the schema information for the "products" table.
	ProductsTable = &schema.Table{
		Name:       "products",
		Columns:    ProductsColumns,
		PrimaryKey: []*schema.Column{ProductsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "product_code",
				Unique:  true,
				Columns: []*schema.Column{ProductsColumns[1]},
			},
		},
	}
	// ProductFeaturesColumns holds the columns for the "product_features" table.
	ProductFeaturesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "feature_name", Type: field.TypeString},
		{Name: "feature_code", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "product_id", Type: field.TypeInt},
	}
	// ProductFeaturesTable holds the schema information for the "product_features" table.
	ProductFeaturesTable = &schema.Table{
		Name:       "product_features",
		Columns:    ProductFeaturesColumns,
		PrimaryKey: []*schema.Column{ProductFeaturesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_features_products_features",
				Columns:    []*schema.Column{ProductFeaturesColumns[5]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ProductManagersColumns holds the columns for the "product_managers" table.
	ProductManagersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"main", "assistant"}},
		{Name: "permissions", Type: field.TypeEnum, Nullable: true, Enums: []string{"read", "full"}, Default: "read"},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "product_id", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt},
	}
	// ProductManagersTable holds the schema information for the "product_managers" table.
	ProductManagersTable = &schema.Table{
		Name:       "product_managers",
		Columns:    ProductManagersColumns,
		PrimaryKey: []*schema.Column{ProductManagersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_managers_products_managers",
				Columns:    []*schema.Column{ProductManagersColumns[6]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "product_managers_users_products",
				Columns:    []*schema.Column{ProductManagersColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// SoftwareVersionsColumns holds the columns for the "software_versions" table.
	SoftwareVersionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "version", Type: field.TypeString},
		{Name: "release_date", Type: field.TypeTime},
		{Name: "update_log", Type: field.TypeString, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "product_id", Type: field.TypeInt},
		{Name: "created_by", Type: field.TypeInt},
	}
	// SoftwareVersionsTable holds the schema information for the "software_versions" table.
	SoftwareVersionsTable = &schema.Table{
		Name:       "software_versions",
		Columns:    SoftwareVersionsColumns,
		PrimaryKey: []*schema.Column{SoftwareVersionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "software_versions_products_software_versions",
				Columns:    []*schema.Column{SoftwareVersionsColumns[7]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "software_versions_users_creator",
				Columns:    []*schema.Column{SoftwareVersionsColumns[8]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "softwareversion_product_id_version",
				Unique:  true,
				Columns: []*schema.Column{SoftwareVersionsColumns[7], SoftwareVersionsColumns[1]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "is_enabled", Type: field.TypeBool, Default: true},
		{Name: "last_login_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_email",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[1]},
			},
		},
	}
	// SoftwareVersionFeaturesColumns holds the columns for the "software_version_features" table.
	SoftwareVersionFeaturesColumns = []*schema.Column{
		{Name: "software_version_id", Type: field.TypeInt},
		{Name: "product_feature_id", Type: field.TypeInt},
	}
	// SoftwareVersionFeaturesTable holds the schema information for the "software_version_features" table.
	SoftwareVersionFeaturesTable = &schema.Table{
		Name:       "software_version_features",
		Columns:    SoftwareVersionFeaturesColumns,
		PrimaryKey: []*schema.Column{SoftwareVersionFeaturesColumns[0], SoftwareVersionFeaturesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "software_version_features_software_version_id",
				Columns:    []*schema.Column{SoftwareVersionFeaturesColumns[0]},
				RefColumns: []*schema.Column{SoftwareVersionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "software_version_features_product_feature_id",
				Columns:    []*schema.Column{SoftwareVersionFeaturesColumns[1]},
				RefColumns: []*schema.Column{ProductFeaturesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// SoftwareVersionFirmwareVersionsColumns holds the columns for the "software_version_firmware_versions" table.
	SoftwareVersionFirmwareVersionsColumns = []*schema.Column{
		{Name: "software_version_id", Type: field.TypeInt},
		{Name: "firmware_version_id", Type: field.TypeInt},
	}
	// SoftwareVersionFirmwareVersionsTable holds the schema information for the "software_version_firmware_versions" table.
	SoftwareVersionFirmwareVersionsTable = &schema.Table{
		Name:       "software_version_firmware_versions",
		Columns:    SoftwareVersionFirmwareVersionsColumns,
		PrimaryKey: []*schema.Column{SoftwareVersionFirmwareVersionsColumns[0], SoftwareVersionFirmwareVersionsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "software_version_firmware_versions_software_version_id",
				Columns:    []*schema.Column{SoftwareVersionFirmwareVersionsColumns[0]},
				RefColumns: []*schema.Column{SoftwareVersionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "software_version_firmware_versions_firmware_version_id",
				Columns:    []*schema.Column{SoftwareVersionFirmwareVersionsColumns[1]},
				RefColumns: []*schema.Column{FirmwareVersionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AuditLogsTable,
		DevicesTable,
		FirmwareVersionsTable,
		LicenseTypesTable,
		LicenseTypeFeaturesTable,
		ProductsTable,
		ProductFeaturesTable,
		ProductManagersTable,
		SoftwareVersionsTable,
		UsersTable,
		SoftwareVersionFeaturesTable,
		SoftwareVersionFirmwareVersionsTable,
	}
)

func init() {
	AuditLogsTable.ForeignKeys[0].RefTable = ProductsTable
	AuditLogsTable.ForeignKeys[1].RefTable = UsersTable
	DevicesTable.ForeignKeys[0].RefTable = UsersTable
	DevicesTable.ForeignKeys[1].RefTable = UsersTable
	DevicesTable.ForeignKeys[2].RefTable = LicenseTypesTable
	DevicesTable.ForeignKeys[3].RefTable = ProductsTable
	FirmwareVersionsTable.ForeignKeys[0].RefTable = UsersTable
	FirmwareVersionsTable.ForeignKeys[1].RefTable = ProductsTable
	LicenseTypesTable.ForeignKeys[0].RefTable = ProductsTable
	LicenseTypeFeaturesTable.ForeignKeys[0].RefTable = LicenseTypesTable
	LicenseTypeFeaturesTable.ForeignKeys[1].RefTable = ProductFeaturesTable
	ProductFeaturesTable.ForeignKeys[0].RefTable = ProductsTable
	ProductManagersTable.ForeignKeys[0].RefTable = ProductsTable
	ProductManagersTable.ForeignKeys[1].RefTable = UsersTable
	SoftwareVersionsTable.ForeignKeys[0].RefTable = ProductsTable
	SoftwareVersionsTable.ForeignKeys[1].RefTable = UsersTable
	SoftwareVersionFeaturesTable.ForeignKeys[0].RefTable = SoftwareVersionsTable
	SoftwareVersionFeaturesTable.ForeignKeys[1].RefTable = ProductFeaturesTable
	SoftwareVersionFirmwareVersionsTable.ForeignKeys[0].RefTable = SoftwareVersionsTable
	SoftwareVersionFirmwareVersionsTable.ForeignKeys[1].RefTable = FirmwareVersionsTable
}
