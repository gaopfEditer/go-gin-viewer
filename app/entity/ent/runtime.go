// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"cambridge-hit.com/gin-base/activateserver/app/entity/ent/auditlog"
	"cambridge-hit.com/gin-base/activateserver/app/entity/ent/device"
	"cambridge-hit.com/gin-base/activateserver/app/entity/ent/firmwareversion"
	"cambridge-hit.com/gin-base/activateserver/app/entity/ent/licensetype"
	"cambridge-hit.com/gin-base/activateserver/app/entity/ent/licensetypefeatures"
	"cambridge-hit.com/gin-base/activateserver/app/entity/ent/product"
	"cambridge-hit.com/gin-base/activateserver/app/entity/ent/productfeature"
	"cambridge-hit.com/gin-base/activateserver/app/entity/ent/productmanager"
	"cambridge-hit.com/gin-base/activateserver/app/entity/ent/softwareversion"
	"cambridge-hit.com/gin-base/activateserver/app/entity/ent/user"
	"cambridge-hit.com/gin-base/activateserver/app/entity/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	auditlogFields := schema.AuditLog{}.Fields()
	_ = auditlogFields
	// auditlogDescModule is the schema descriptor for module field.
	auditlogDescModule := auditlogFields[2].Descriptor()
	// auditlog.ModuleValidator is a validator for the "module" field. It is called by the builders before save.
	auditlog.ModuleValidator = auditlogDescModule.Validators[0].(func(string) error)
	// auditlogDescActionType is the schema descriptor for action_type field.
	auditlogDescActionType := auditlogFields[3].Descriptor()
	// auditlog.ActionTypeValidator is a validator for the "action_type" field. It is called by the builders before save.
	auditlog.ActionTypeValidator = auditlogDescActionType.Validators[0].(func(string) error)
	// auditlogDescCreatedAt is the schema descriptor for created_at field.
	auditlogDescCreatedAt := auditlogFields[7].Descriptor()
	// auditlog.DefaultCreatedAt holds the default value on creation for the created_at field.
	auditlog.DefaultCreatedAt = auditlogDescCreatedAt.Default.(func() time.Time)
	// auditlogDescID is the schema descriptor for id field.
	auditlogDescID := auditlogFields[0].Descriptor()
	// auditlog.IDValidator is a validator for the "id" field. It is called by the builders before save.
	auditlog.IDValidator = auditlogDescID.Validators[0].(func(int) error)
	deviceFields := schema.Device{}.Fields()
	_ = deviceFields
	// deviceDescOemTag is the schema descriptor for oem_tag field.
	deviceDescOemTag := deviceFields[4].Descriptor()
	// device.DefaultOemTag holds the default value on creation for the oem_tag field.
	device.DefaultOemTag = deviceDescOemTag.Default.(string)
	// deviceDescRemark is the schema descriptor for remark field.
	deviceDescRemark := deviceFields[5].Descriptor()
	// device.DefaultRemark holds the default value on creation for the remark field.
	device.DefaultRemark = deviceDescRemark.Default.(string)
	firmwareversionFields := schema.FirmwareVersion{}.Fields()
	_ = firmwareversionFields
	// firmwareversionDescVersion is the schema descriptor for version field.
	firmwareversionDescVersion := firmwareversionFields[1].Descriptor()
	// firmwareversion.VersionValidator is a validator for the "version" field. It is called by the builders before save.
	firmwareversion.VersionValidator = firmwareversionDescVersion.Validators[0].(func(string) error)
	// firmwareversionDescReleaseDate is the schema descriptor for release_date field.
	firmwareversionDescReleaseDate := firmwareversionFields[2].Descriptor()
	// firmwareversion.DefaultReleaseDate holds the default value on creation for the release_date field.
	firmwareversion.DefaultReleaseDate = firmwareversionDescReleaseDate.Default.(func() time.Time)
	// firmwareversionDescCreatedAt is the schema descriptor for created_at field.
	firmwareversionDescCreatedAt := firmwareversionFields[5].Descriptor()
	// firmwareversion.DefaultCreatedAt holds the default value on creation for the created_at field.
	firmwareversion.DefaultCreatedAt = firmwareversionDescCreatedAt.Default.(func() time.Time)
	// firmwareversionDescUpdatedAt is the schema descriptor for updated_at field.
	firmwareversionDescUpdatedAt := firmwareversionFields[6].Descriptor()
	// firmwareversion.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	firmwareversion.DefaultUpdatedAt = firmwareversionDescUpdatedAt.Default.(func() time.Time)
	// firmwareversion.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	firmwareversion.UpdateDefaultUpdatedAt = firmwareversionDescUpdatedAt.UpdateDefault.(func() time.Time)
	licensetypeFields := schema.LicenseType{}.Fields()
	_ = licensetypeFields
	// licensetypeDescTypeName is the schema descriptor for type_name field.
	licensetypeDescTypeName := licensetypeFields[1].Descriptor()
	// licensetype.TypeNameValidator is a validator for the "type_name" field. It is called by the builders before save.
	licensetype.TypeNameValidator = licensetypeDescTypeName.Validators[0].(func(string) error)
	// licensetypeDescLicenseType is the schema descriptor for license_type field.
	licensetypeDescLicenseType := licensetypeFields[2].Descriptor()
	// licensetype.LicenseTypeValidator is a validator for the "license_type" field. It is called by the builders before save.
	licensetype.LicenseTypeValidator = licensetypeDescLicenseType.Validators[0].(func(string) error)
	// licensetypeDescCreatedAt is the schema descriptor for created_at field.
	licensetypeDescCreatedAt := licensetypeFields[4].Descriptor()
	// licensetype.DefaultCreatedAt holds the default value on creation for the created_at field.
	licensetype.DefaultCreatedAt = licensetypeDescCreatedAt.Default.(func() time.Time)
	// licensetypeDescUpdatedAt is the schema descriptor for updated_at field.
	licensetypeDescUpdatedAt := licensetypeFields[5].Descriptor()
	// licensetype.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	licensetype.DefaultUpdatedAt = licensetypeDescUpdatedAt.Default.(func() time.Time)
	// licensetype.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	licensetype.UpdateDefaultUpdatedAt = licensetypeDescUpdatedAt.UpdateDefault.(func() time.Time)
	// licensetypeDescID is the schema descriptor for id field.
	licensetypeDescID := licensetypeFields[0].Descriptor()
	// licensetype.IDValidator is a validator for the "id" field. It is called by the builders before save.
	licensetype.IDValidator = licensetypeDescID.Validators[0].(func(int) error)
	licensetypefeaturesFields := schema.LicenseTypeFeatures{}.Fields()
	_ = licensetypefeaturesFields
	// licensetypefeaturesDescCreatedAt is the schema descriptor for created_at field.
	licensetypefeaturesDescCreatedAt := licensetypefeaturesFields[3].Descriptor()
	// licensetypefeatures.DefaultCreatedAt holds the default value on creation for the created_at field.
	licensetypefeatures.DefaultCreatedAt = licensetypefeaturesDescCreatedAt.Default.(func() time.Time)
	// licensetypefeaturesDescID is the schema descriptor for id field.
	licensetypefeaturesDescID := licensetypefeaturesFields[0].Descriptor()
	// licensetypefeatures.IDValidator is a validator for the "id" field. It is called by the builders before save.
	licensetypefeatures.IDValidator = licensetypefeaturesDescID.Validators[0].(func(int) error)
	productFields := schema.Product{}.Fields()
	_ = productFields
	// productDescCode is the schema descriptor for code field.
	productDescCode := productFields[1].Descriptor()
	// product.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	product.CodeValidator = productDescCode.Validators[0].(func(string) error)
	// productDescProductType is the schema descriptor for product_type field.
	productDescProductType := productFields[2].Descriptor()
	// product.DefaultProductType holds the default value on creation for the product_type field.
	product.DefaultProductType = productDescProductType.Default.(string)
	// productDescProductName is the schema descriptor for product_name field.
	productDescProductName := productFields[3].Descriptor()
	// product.ProductNameValidator is a validator for the "product_name" field. It is called by the builders before save.
	product.ProductNameValidator = productDescProductName.Validators[0].(func(string) error)
	// productDescCreatedAt is the schema descriptor for created_at field.
	productDescCreatedAt := productFields[4].Descriptor()
	// product.DefaultCreatedAt holds the default value on creation for the created_at field.
	product.DefaultCreatedAt = productDescCreatedAt.Default.(func() time.Time)
	// productDescUpdatedAt is the schema descriptor for updated_at field.
	productDescUpdatedAt := productFields[5].Descriptor()
	// product.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	product.DefaultUpdatedAt = productDescUpdatedAt.Default.(func() time.Time)
	// product.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	product.UpdateDefaultUpdatedAt = productDescUpdatedAt.UpdateDefault.(func() time.Time)
	// productDescID is the schema descriptor for id field.
	productDescID := productFields[0].Descriptor()
	// product.IDValidator is a validator for the "id" field. It is called by the builders before save.
	product.IDValidator = productDescID.Validators[0].(func(int) error)
	productfeatureFields := schema.ProductFeature{}.Fields()
	_ = productfeatureFields
	// productfeatureDescFeatureName is the schema descriptor for feature_name field.
	productfeatureDescFeatureName := productfeatureFields[1].Descriptor()
	// productfeature.FeatureNameValidator is a validator for the "feature_name" field. It is called by the builders before save.
	productfeature.FeatureNameValidator = productfeatureDescFeatureName.Validators[0].(func(string) error)
	// productfeatureDescFeatureCode is the schema descriptor for feature_code field.
	productfeatureDescFeatureCode := productfeatureFields[2].Descriptor()
	// productfeature.FeatureCodeValidator is a validator for the "feature_code" field. It is called by the builders before save.
	productfeature.FeatureCodeValidator = productfeatureDescFeatureCode.Validators[0].(func(string) error)
	// productfeatureDescCreatedAt is the schema descriptor for created_at field.
	productfeatureDescCreatedAt := productfeatureFields[4].Descriptor()
	// productfeature.DefaultCreatedAt holds the default value on creation for the created_at field.
	productfeature.DefaultCreatedAt = productfeatureDescCreatedAt.Default.(func() time.Time)
	// productfeatureDescUpdatedAt is the schema descriptor for updated_at field.
	productfeatureDescUpdatedAt := productfeatureFields[5].Descriptor()
	// productfeature.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	productfeature.DefaultUpdatedAt = productfeatureDescUpdatedAt.Default.(func() time.Time)
	// productfeature.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	productfeature.UpdateDefaultUpdatedAt = productfeatureDescUpdatedAt.UpdateDefault.(func() time.Time)
	// productfeatureDescID is the schema descriptor for id field.
	productfeatureDescID := productfeatureFields[0].Descriptor()
	// productfeature.IDValidator is a validator for the "id" field. It is called by the builders before save.
	productfeature.IDValidator = productfeatureDescID.Validators[0].(func(int) error)
	productmanagerFields := schema.ProductManager{}.Fields()
	_ = productmanagerFields
	// productmanagerDescCreatedAt is the schema descriptor for created_at field.
	productmanagerDescCreatedAt := productmanagerFields[6].Descriptor()
	// productmanager.DefaultCreatedAt holds the default value on creation for the created_at field.
	productmanager.DefaultCreatedAt = productmanagerDescCreatedAt.Default.(func() time.Time)
	// productmanagerDescUpdatedAt is the schema descriptor for updated_at field.
	productmanagerDescUpdatedAt := productmanagerFields[7].Descriptor()
	// productmanager.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	productmanager.DefaultUpdatedAt = productmanagerDescUpdatedAt.Default.(func() time.Time)
	// productmanager.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	productmanager.UpdateDefaultUpdatedAt = productmanagerDescUpdatedAt.UpdateDefault.(func() time.Time)
	// productmanagerDescID is the schema descriptor for id field.
	productmanagerDescID := productmanagerFields[0].Descriptor()
	// productmanager.IDValidator is a validator for the "id" field. It is called by the builders before save.
	productmanager.IDValidator = productmanagerDescID.Validators[0].(func(int) error)
	softwareversionFields := schema.SoftwareVersion{}.Fields()
	_ = softwareversionFields
	// softwareversionDescVersion is the schema descriptor for version field.
	softwareversionDescVersion := softwareversionFields[1].Descriptor()
	// softwareversion.VersionValidator is a validator for the "version" field. It is called by the builders before save.
	softwareversion.VersionValidator = softwareversionDescVersion.Validators[0].(func(string) error)
	// softwareversionDescCreatedAt is the schema descriptor for created_at field.
	softwareversionDescCreatedAt := softwareversionFields[6].Descriptor()
	// softwareversion.DefaultCreatedAt holds the default value on creation for the created_at field.
	softwareversion.DefaultCreatedAt = softwareversionDescCreatedAt.Default.(func() time.Time)
	// softwareversionDescUpdatedAt is the schema descriptor for updated_at field.
	softwareversionDescUpdatedAt := softwareversionFields[7].Descriptor()
	// softwareversion.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	softwareversion.DefaultUpdatedAt = softwareversionDescUpdatedAt.Default.(func() time.Time)
	// softwareversion.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	softwareversion.UpdateDefaultUpdatedAt = softwareversionDescUpdatedAt.UpdateDefault.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[1].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[2].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	// userDescIsEnabled is the schema descriptor for is_enabled field.
	userDescIsEnabled := userFields[3].Descriptor()
	// user.DefaultIsEnabled holds the default value on creation for the is_enabled field.
	user.DefaultIsEnabled = userDescIsEnabled.Default.(bool)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[5].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[6].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
}
